#+HTML_LINK_UP: ../../index.html
#+HTML_LINK_HOME: ../../index.html
#+TITLE: SICP Section 1.1.7
* Exercise 1.7
#+BEGIN_SRC racket
  (define (sqrt-iter guess x)
    (if (good-enough? guess x)
        guess
        (sqrt-iter (improve guess x) x)))

  (define (improve guess x)
    (average guess (/ x guess)))

  (define (average x y) (/ (+ x y) 2))

  (define (good-enough? guess x)
    (< (guess-rate-of-change guess x) .05))
 
  (define (sqrt x) (sqrt-iter 1.0 x))

  (define (square x) (* x x))

  (define (guess-rate-of-change guess x)
    (/ (abs (- (improve guess x) guess))
       guess))
#+END_SRC

* Exercise 1.8
#+BEGIN_SRC racket
(define (cbrt-iter guess x)
  (if (good-enough? guess x)
      guess
      (cbrt-iter (improve guess x) x)))

(define (improve guess x) (func1 x guess))

(define (func1 x y)
  (/ (+ (/ x (* y y))
        (* 2 y))
     3))

(define (good-enough? guess x)
  (< (guess-rate-of-change guess x) .005))

(define (cbrt x) (cbrt-iter 1.0 x))

(define (cube x) (* x x x))

(define (guess-rate-of-change guess x)
   (/ (abs (- (improve guess x)
              guess))
      guess))
#+END_SRC
